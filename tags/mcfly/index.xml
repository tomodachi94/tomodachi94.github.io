<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>McFly on Tomodachi94's Musings</title><link>https://tomodachi94.github.io/tags/mcfly/</link><description>Recent content in McFly on Tomodachi94's Musings</description><generator>Hugo</generator><language>en-us</language><copyright>Copyright Â© 2023, Tomodachi94. All Rights Reserved unless explicitly stated.</copyright><lastBuildDate>Sun, 09 Feb 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://tomodachi94.github.io/tags/mcfly/index.xml" rel="self" type="application/rss+xml"/><item><title>Unit testing with ComputerCraft, McFly, and CraftOS-PC</title><link>https://tomodachi94.github.io/blog/computercraft-mcfly-testing/</link><pubDate>Sun, 09 Feb 2025 00:00:00 +0000</pubDate><guid>https://tomodachi94.github.io/blog/computercraft-mcfly-testing/</guid><description>&lt;p&gt;&lt;a href="https://www.howtogeek.com/devops/what-is-unit-testing-and-why-is-it-important/"&gt;Unit testing is awesome&lt;/a&gt;.
It helps you catch bugs early by ensuring all of the components of your program work as expected.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note: This guide is targeted towards &lt;em&gt;experts&lt;/em&gt; who have advanced knowledge of ComputerCraft and know a few things about unit tests.&lt;/strong&gt;
Experience with unit tests in another language is helpful too, but isn&amp;rsquo;t required.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://computercraft.cc"&gt;CC: Tweaked&lt;/a&gt; contains a little-known unit testing framework called &lt;strong&gt;McFly&lt;/strong&gt;, which describes itself as &amp;ldquo;a very basic test framework for ComputerCraft&amp;rdquo; drawing inspiration from the &lt;a href="https://lunarmodules.github.io/busted/"&gt;Busted&lt;/a&gt; framework for Lua.
This post will function as an introduction to McFly, in the process providing instructions for running the tests inside of the &lt;a href="https://craftos-pc.cc"&gt;CraftOS-PC emulator&lt;/a&gt;, suitable for running in a continuous integration pipeline.&lt;/p&gt;</description></item></channel></rss>